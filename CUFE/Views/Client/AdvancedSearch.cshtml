@model IEnumerable<CUFE.Models.Freight>
@{
    ViewBag.Title = "Advanced Search";
    Layout = "~/Views/Shared/_LayoutBackend.cshtml";
    IEnumerable<CUFE.Models.Country> countries = CUFE.Helpers.FastController.AllCountries();
}
@section head{
    @*<script src="~/Scripts/SearchScripts.js"></script>*@
    <script src="~/Scripts/AdvanceSearch.js"></script>
}
    <div id="ResizedDiv" style="width: 100%; margin-top:-30px;">
        @Html.DevExpress().FormLayout(settings =>
    {
        settings.Name = "searchForm";

        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        var groupItems = settings.Items.AddGroupItem(groupSettings =>
        {

            groupSettings.Caption = "Search form";
            groupSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            groupSettings.ColumnCount = 5;

        });

        //start location
        groupItems.Items.Add(i =>
        {
            i.Caption = "Loading Country";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;

            i.NestedExtension().ComboBox(s =>
            {
                s.Name = "startcountry";
                s.Properties.TextField = "CountryName";
                s.Properties.ValueField = "CountryName";
                s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                s.Properties.DataSource = countries;
                s.Properties.ClientSideEvents.ValueChanged = "setOriginCountry_Changed";
                
            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Loading Postcode";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().TextBox(s =>
            {
                s.Name = "statzip";
                s.Properties.ClientSideEvents.ValueChanged = "setOriginZip_Changed";

            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Loading City";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().TextBox(s =>
            {
                s.Name = "startlocation";
                s.Properties.ClientSideEvents.ValueChanged = "setOriginCity_Changed";

            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Loading Date";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().DateEdit(
                s =>
                {
                    s.Name = "startdate";
                    s.Properties.ClientSideEvents.ValueChanged = "setStartDate_Changed";
                });

        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Radius";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;

            i.NestedExtension().TrackBar(s =>
            {
                s.Name = "startradius";
                s.Properties.SmallTickFrequency = 5;
                s.Properties.LargeTickInterval = 10;
                s.Properties.MaxValue = 100;
                s.Position = 10;
                s.Properties.ScalePosition = ScalePosition.RightOrBottom;
                s.Properties.ClientSideEvents.ValueChanged = "setOriginRad_Changed";
            }
            );
        });


        //unloading
        groupItems.Items.Add(i =>
        {
            i.Caption = "Unloading Country";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;

            i.NestedExtension().ComboBox(s =>
            {
                s.Name = "endcountry";
                s.Properties.TextField = "CountryName";
                s.Properties.ValueField = "CountryName";
                s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                s.Properties.DataSource = countries;
                s.Properties.ClientSideEvents.ValueChanged = "setDestCountry_Changed";
            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "unloading Postcode";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().TextBox(s =>
            {
                s.Name = "endzip";
                s.Properties.ClientSideEvents.ValueChanged = "setDestZip_Changed";

            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "unLoading City";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().TextBox(s =>
            {
                s.Name = "endlocation";
                s.Properties.ClientSideEvents.ValueChanged = "setDestCity_Changed";

            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Loading Date";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;
            i.NestedExtension().DateEdit(
                s =>
                {
                    s.Name = "enddate";
                    s.Properties.ClientSideEvents.ValueChanged = "setEndDate_Changed";
                });

        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Radius";
            i.VerticalAlign = FormLayoutVerticalAlign.Middle;

            i.NestedExtension().TrackBar(s =>
            {
                s.Name = "endradius";
                s.Properties.SmallTickFrequency = 5;
                s.Properties.LargeTickInterval = 10;
                s.Properties.MaxValue = 100;
                s.Position = 10;
                s.Properties.ScalePosition = ScalePosition.RightOrBottom;
                s.Properties.ClientSideEvents.ValueChanged = "setDestRad_Changed";
            }
            );
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "Search Using Radius";
            i.NestedExtension().CheckBox(c =>
            {
                c.Name = "withRadius";
                c.Properties.ClientSideEvents.CheckedChanged = "setSearchWithRadius_Changed";
            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "";
            i.NestedExtension().Button(b =>
            {
                b.Name = "searchBtn";
                b.Text = "Search Freights";
                //b.ClientSideEvents.Click = "btnOK_Click";
                b.ClientSideEvents.Click = "searchFreights_Click";

            });
        });

        groupItems.Items.Add(i =>
        {
            i.Caption = "";
            i.NestedExtension().Button( b=>
            {
                b.Name = "searchLoadsBtn";
                b.Text = "Search Loads";
                //b.ClientSideEvents.Click = "btnLoads_Click";
                b.ClientSideEvents.Click = "searchLoads_Click";
            });
        });


        groupItems.Items.Add(i =>
        {
            i.Caption = "";
            i.NestedExtension().Button(b =>
            {
                b.Name = "clearBtn";
                b.Text = "Clear Search";
                b.ClientSideEvents.Click = "rxVal_btn";
            });
        });


    }).GetHtml()


        @Html.DevExpress().RoundPanel(settings => {
       settings.Name = "roundPanel";
       settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
       settings.HeaderText = "Search Results:";
       settings.SetContent(() => {
           Html.RenderPartial("Results");
       });
   }).GetHtml()
    </div>

