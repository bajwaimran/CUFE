@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "gridView";
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "Freights", Action = "GridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Freights", Action = "GridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Freights", Action = "GridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Freights", Action = "GridViewPartialDelete" };
        //settings.CallbackRouteValues = new { Controller = "Freights", Action = "Content" };

        settings.EnablePagingGestures = AutoBoolean.False;

        settings.ControlStyle.CssClass = "grid-view";
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.Styles.Cell.Wrap = DefaultBoolean.False;
        settings.Styles.PagerBottomPanel.CssClass = "pager";
        settings.Styles.FocusedRow.CssClass = "focused";

        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsBehavior.AllowDragDrop = false;

        settings.SettingsSearchPanel.CustomEditorName = "tbSearch";
        settings.Settings.ShowTitlePanel = true;
        settings.SetTitlePanelTemplateContent(content =>
        {
            Html.DevExpress().Label(label =>
            {

                label.Text = "Freights Management";
                label.Style["font-weight"] = "bold";

            }).Render();

        });

        if (User.IsInRole("Admin"))
        {
            settings.CommandColumn.Visible = true;
            settings.CommandColumn.ShowDeleteButton = true;
            settings.CommandColumn.ShowEditButton = true;
        }

        settings.KeyFieldName = "Oid";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;

        //settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.HideDataCells;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.None;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = true;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;

        settings.Columns.Add(c =>
        {
            c.FieldName = "StartDate";
            c.ColumnType = MVCxGridViewColumnType.DateEdit;
            c.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
            c.Width = System.Web.UI.WebControls.Unit.Pixel(150);
        });
        settings.Columns.Add(C =>
        {
            C.FieldName = "EndDate";
            C.ColumnType = MVCxGridViewColumnType.DateEdit;
            C.Settings.AutoFilterCondition = AutoFilterCondition.Equals;
            C.Width = System.Web.UI.WebControls.Unit.Pixel(150);
        });
        settings.Columns.Add("StartLocationName");
        settings.Columns.Add("StartLocationZip");
        settings.Columns.Add("StartLocationCountry");
        settings.Columns.Add("EndLocationName");
        settings.Columns.Add("EndLocationZip");
        settings.Columns.Add("EndLocationCountry");
        settings.Columns.Add("OfferredPrice");
        settings.Columns.Add(c =>
        {
            c.UnboundType = DevExpress.Data.UnboundColumnType.String;
            c.Visible = true;
            c.SetDataItemTemplateContent(x =>
            {
                ViewContext.Writer.Write(string.Format("<a href=\"/Client/Freight/{0}\" class=\"button\" data-id='{0}' onclick=\"\">View</a>", x.KeyValue));
            });
        });
        settings.Settings.ShowHeaderFilterButton = true;

        //settings.ClientSideEvents.SelectionChanged = "OnSelectedIndexChanged";
        //settings.ClientSideEvents.RowClick = "function(s, e){ alert(); }";
        //settings.ClientSideEvents.RowClick = "OnSelectedIndexChanged";
        //settings.ClientSideEvents.RowClick = "rowClick";
        //settings.ClientSideEvents.FocusedRowChanged = "OnSelectedIndexChanged";
        //settings.ClientSideEvents.BeginCallback = "GridOnBeginCallback";
        //settings.ClientSideEvents.Init = "employeesGrid_Init";
        //settings.ClientSideEvents.FocusedRowChanged = "employeesGrid_FocusedRowChanged";
        //settings.ClientSideEvents.SelectionChanged = "employeesGrid_FocusedRowChanged";
        //settings.ClientSideEvents.EndCallback = "employeesGrid_EndCallback";
    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()
